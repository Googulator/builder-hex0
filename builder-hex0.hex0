# Builder-Hex0
#
# Builder-Hex0 is a small bootable machine image which has
# the ability to compile hex0 code. It is also written in hex0
# and so it can build itself if provided with its own source code.
#
# hex0 is a "language" for binary encoding in hexadecimal
# with support for comments.
#
# This file was hand assembled using this reference:
# http://www.mathemainzel.info/files/x86asmref.html
#
# boot drive is in dl
#

# ------------------------------------------------------------
# Stub Entry Point
#[7C00]
#:_start

# We cannot be sure the registers are initialized to zero so we
# do that first. Setting CS to zero requires a long jump so we
# jump to a routine (just past the globals) that will initialize
# the rest of the registers.
EA 80 7C 00 00 # JMP 00007C80  jmp _init_registers


# ------------------------------------------------------------
# Reserved for global data
#[7C05]
               00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

# ------------------------------------------------------------
# Global functions

#[7C40]
#:_kern_halt
#:_syscall_halt
#:halt
FA  # cli
F4  # hlt

#[7C42]
#:_kern_reboot
#:_syscall_reboot
#:reboot
EA F0 FF 00 F0  # ljmp $F000:FFF0

#[7C47]
#:fputc
#:_syscall_fputc(al=c)
# modifies: ah
53        # PUSH_BX

# Prepare to use BIOS tty output interrupt.
# Specify text page 00, 0 black background, 7 light grey text
BB 00 07  # LOADI16_BX 0007
# Specify the `write character` BIOS routine
B4 0E     # LOADI8_AH  0E
CD 10     # INT_10

5B        # POP_BX
CB        # RETF

#[7C51]
# Reserved for global functions
   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

# ------------------------------------------------------------
# Main Entry Point
# We far jump here after entry to initialize the CS register.
# So this our real entry point. We initialize the registers
# and drop into main().
#[7C80]
#:_init_registers
31 C0     # xor ax, ax
8E D8     # COPY_AX_to_DS
8E C0     # COPY_AX_to_ES


#[7C86]
# ------------------------------------------------------------
# Main Program Body
#:main

B0 4F           # LOADI8_AL 'O'
9A 47 7C 00 00  # CALL 00007C47  call fputc
B0 4B           # LOADI8_AL 'K'
9A 47 7C 00 00  # CALL 00007C47  call fputc
B0 0D           # LOADI8_AL '\r'
9A 47 7C 00 00  # CALL 00007C47  call fputc
B0 0A           # LOADI8_AL '\n'
9A 47 7C 00 00  # CALL 00007C47  call fputc
B0 2E           # LOADI8_AL '.'
9A 47 7C 00 00  # CALL 00007C47  call fputc
B0 0D           # LOADI8_AL '\r'
9A 47 7C 00 00  # CALL 00007C47  call fputc
B0 0A           # LOADI8_AL '\n'
9A 47 7C 00 00  # CALL 00007C47  call fputc

# we have no way to build now, so halt
9A 40 7C 00 00  # CALL 00007C40  call halt()

# otherwise we would run the build here

# after a build occurs, invoke transition
9A 42 7C 00 00  # CALL 00007C42  call reboot()

# END Program Body

# ------------------------------------------------------------
# This is the rest of the MBR.

#[7CC1]
   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
#[7D00]
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
#[7D40]
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
#[7D80]
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

#[7DB0]
00 00 00 00 00 00 00 00 00 00 00 00 00 00

# Partition entry 1
#[7DBE]
                                          00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 
# Partition entry 2
#[7DD0]
                                          00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 
# Partition entry 3
                                          00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 
# Partition entry 4
                                          00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 
#[7DFE]
# This is the DOS/MBR identifier at offset 510:
55 AA 
